
--- 타입
    1. 기본자료형 : 리터럴 데이터를 저장하는 ( 8가지 기본자료형 )
    2. 참조자료형 : 클래스 , 배열 , 인터페이스 등등
--- 변수
    1. 지역변수 : 함수 안에서 선언된 변수
        개발자가 선언시 값을 대입 안했을때 쓰레기값이 들어감
    2. 멤버변수 : 클래스 안에서 선언된 변수
        개발자가 선언시 값을 대입 안했을때 자동 초기값 들어감
        - 정수 : 0 , 실수 : 0.0 , 논리 : false , 객체 : null

변수는 하나의 자료형의 데이터를 1개 저장할수 있는 공간
    int value = 10;
배열은 하나의 자료형의 데이터를 여러개 저장할수있는 공간
    int[] array = new int[10]

1. 초기화 하는 방법
    타입[] 변수명 = new 타입[개수];
    타입 변수명[] = new 타입[개수];

2. 배열의 메모리 계산 : 타입 크기 * 배열의길이

3. 배열선언과 동시에 값 초기화
    타입[] 변수명 = { 값1 , 값2 , 값3 }

4. 인덱스 활용
    - 배열의요소 : 배열내 저장된 데이터들
        - 초기값 : 정수:0 , 실수:0.0 , 논리 : false , 객체 : null
    - 인덱스 : 배열 요소가 저장된 메모리 위치를 찾아 주는 역할
        - 인덱스는 0번부터 시작
    int[] num = new int[5];
        ---- [ 0 ] [ 0 ] [ 0 ] [ 0 ] [ 0 ]
    num[3] = 25;
        ---- [ 0 ] [ 0 ] [ 0 ] [ 25 ] [ 0 ]
    int age = num[3];
        ---- age변수에는 25가 들어있다.

5. 배열의 길이 속성
    배열변수명.length

6. 배열의 항목/요소 값 대입 및 수정
    배열변수명[인덱스] = 값

7. 배열의 항목/요소 값 호출
    배열변수명[인덱스]

8. 배열의 항목/요소 값 초기화/비우기
    배열변수명[인덱스] = 각 타입의 초기값
    * 한번 할당(new) 된 배열의 길이는 다시 할당(new) 되기전까지 고정길이

10. 배열의 항목/요소 순회
    for( int i = 0 ; i < 배열변수명.length ; i++ ){ }


-
    JS : [1] [2] [3] [4] [5] [6]
        array.splice( 3 , 1 )
        [1] [2] [3] [5] [6]

    JAVA : [1] [2] [3] [4] [5] [6]
        array[3] = 0;
        [1] [2] [3] [0] [5] [6]
        - 중간에 의미없는 데이터가 존재하면 검색/색인 시 느려짐.
        - 대안 1
        for( let i = 3 ; i < array.length ; i++ ){
            array[i] = array[i+1];
        }
        [1] [2] [3] [5] [6] [6]

        - 대안2
        array = new int[ array.length-1 ]
        [1] [2] [3] [5] [6]





